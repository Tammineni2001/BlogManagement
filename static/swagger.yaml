swagger: "2.0"
info:
  description: "This is the API documentation for the Blog Management System."
  version: "1.0.0"
  title: "Blog Management System API"
host: "127.0.0.1:5000"
basePath: "/"
schemes:
  - "http"
paths:
  /auth/register:
    post:
      summary: "Register a new user"
      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "User object that needs to be registered"
          required: true
          schema:
            type: "object"
            properties:
              username:
                type: "string"
              password:
                type: "string"
              confirm_password:
                type: "string"
              email:
                type: "string"
              role:
                type: "string"
                enum: ["user", "admin"]
      responses:
        201:
          description: "User registered successfully"
        400:
          description: "Bad Request"
        500:
          description: "Internal Server Error"
  /auth/login:
    post:
      summary: "Authenticate a user and return a JWT token"
      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "User login credentials"
          required: true
          schema:
            type: "object"
            properties:
              username:
                type: "string"
              password:
                type: "string"
              email:
                type: "string"
      responses:
        200:
          description: "Login successful"
        400:
          description: "Invalid credentials"
        500:
          description: "Internal Server Error"
  /api/posts:
    get:
      summary: "Retrieve a list of all posts"
      parameters:
        - in: "query"
          name: "category_id"
          type: "integer"
          required: false
          description: "ID of the category to filter posts by"
      responses:
        200:
          description: "List of posts"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/definitions/Post'
        400:
          description: "Category ID is required"
    post:
      summary: "Create a new post (authenticated users only)"
      security:
        - bearerAuth: []
      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Post object that needs to be created"
          required: true
          schema:
            type: "object"
            properties:
              title:
                type: "string"
              content:
                type: "string"
              category_id:
                type: "integer"
      responses:
        201:
          description: "Post created successfully"
        400:
          description: "Bad Request"
  /api/posts/{id}:
    get:
      summary: "Retrieve details of a specific post by ID"
      parameters:
        - in: "path"
          name: "id"
          type: "integer"
          required: true
          description: "Post ID"
      responses:
        200:
          description: "Post details"
          content:
            application/json:
              schema:
                $ref: '#/definitions/Post'
        404:
          description: "Post not found"
    put:
      summary: "Update a specific post by ID (authenticated users only)"
      security:
        - bearerAuth: []
      consumes:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          type: "integer"
          required: true
          description: "Post ID"
        - in: "body"
          name: "body"
          description: "Updated post object"
          required: true
          schema:
            type: "object"
            properties:
              title:
                type: "string"
              content:
                type: "string"
              category_id:
                type: "integer"
      responses:
        200:
          description: "Post updated successfully"
        403:
          description: "Forbidden"
        404:
          description: "Post not found"
    delete:
      summary: "Delete a specific post by ID (authenticated users only)"
      security:
        - bearerAuth: []
      parameters:
        - in: "path"
          name: "id"
          type: "integer"
          required: true
          description: "Post ID"
      responses:
        200:
          description: "Post deleted successfully"
        403:
          description: "Forbidden"
        404:
          description: "Post not found"
  /api/posts/{post_id}/comments:
    get:
      summary: "Retrieve comments for a specific post"
      parameters:
        - in: "path"
          name: "post_id"
          type: "integer"
          required: true
          description: "Post ID"
      responses:
        200:
          description: "List of comments"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/definitions/Comment'
    post:
      summary: "Add a comment to a specific post (authenticated users only)"
      security:
        - bearerAuth: []
      consumes:
        - "application/json"
      parameters:
        - in: "path"
          name: "post_id"
          type: "integer"
          required: true
          description: "Post ID"
        - in: "body"
          name: "body"
          description: "Comment object that needs to be added"
          required: true
          schema:
            type: "object"
            properties:
              content:
                type: "string"
      responses:
        201:
          description: "Comment added successfully"
  /api/categories:
    get:
      summary: "Retrieve a list of all categories"
      responses:
        200:
          description: "List of categories"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/definitions/Category'
    post:
      summary: "Create a new category (admin users only)"
      security:
        - bearerAuth: []
      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Category object that needs to be created"
          required: true
          schema:
            type: "object"
            properties:
              name:
                type: "string"
      responses:
        201:
          description: "Category created successfully"
        403:
          description: "Forbidden"
securityDefinitions:
  bearerAuth:
    type: "apiKey"
    name: "Authorization"
    in: "header"
definitions:
  User:
    type: object
    properties:
      id:
        type: integer
      username:
        type: string
      email:
        type: string
      password_hash:
        type: string  
      role:
        type: string
  Post:
    type: object
    properties:
      id:
        type: integer
      title:
        type: string
      content:
        type: string
      user_id:
        type: integer
      category_id:
        type: integer
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  Comment:
    type: object
    properties:
      id:
        type: integer
      content:
        type: string
      user_id:
        type: integer
      post_id:
        type: integer
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  Category:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string

